<!DOCTYPE html>
<html>
	<head>
		<title>Zalgo</title>
		<meta charset="utf-8" />
		<meta content="tchouky" name="Author">
		<meta content="Zalgo text generator" name="Desciption" >
		<meta content="zalgo,zalgo text,zalgo text generator, text generator" name="Keywords" >
		<style type="text/css">.zalgo_td {
			BORDER-RIGHT: black 1px solid; BORDER-TOP: black 1px solid; FONT-SIZE: 32px; BORDER-LEFT: black 1px solid; WIDTH: 48px; BORDER-BOTTOM: black 1px solid; TEXT-ALIGN: center
		}
		.zalgo_ref_table {
			BORDER-RIGHT: black 1px solid; BORDER-TOP: black 1px solid; BORDER-LEFT: black 1px solid; BORDER-BOTTOM: black 1px solid
		}
		</style>

		<script type="text/javascript" charset="UTF-8">
		/* <![CDATA[ */
			//============================================================
			// ZALGO text script by tchouky
			//============================================================

			// data set of leet unicode chars
			//---------------------------------------------------

			//those go UP
			var zalgo_up = [
				'\u030d', /*     ̍     */		'\u030e', /*     ̎     */		'\u0304', /*     ̄     */		'\u0305', /*     ̅     */
				'\u033f', /*     ̿     */		'\u0311', /*     ̑     */		'\u0306', /*     ̆     */		'\u0310', /*     ̐     */
				'\u0352', /*     ͒     */		'\u0357', /*     ͗     */		'\u0351', /*     ͑     */		'\u0307', /*     ̇     */
				'\u0308', /*     ̈     */		'\u030a', /*     ̊     */		'\u0342', /*     ͂     */		'\u0343', /*     ̓     */
				'\u0344', /*     ̈́     */		'\u034a', /*     ͊     */		'\u034b', /*     ͋     */		'\u034c', /*     ͌     */
				'\u0303', /*     ̃     */		'\u0302', /*     ̂     */		'\u030c', /*     ̌     */		'\u0350', /*     ͐     */
				'\u0300', /*     ̀     */		'\u0301', /*     ́     */		'\u030b', /*     ̋     */		'\u030f', /*     ̏     */
				'\u0312', /*     ̒     */		'\u0313', /*     ̓     */		'\u0314', /*     ̔     */		'\u033d', /*     ̽     */
				'\u0309', /*     ̉     */		'\u0363', /*     ͣ     */		'\u0364', /*     ͤ     */		'\u0365', /*     ͥ     */
				'\u0366', /*     ͦ     */		'\u0367', /*     ͧ     */		'\u0368', /*     ͨ     */		'\u0369', /*     ͩ     */
				'\u036a', /*     ͪ     */		'\u036b', /*     ͫ     */		'\u036c', /*     ͬ     */		'\u036d', /*     ͭ     */
				'\u036e', /*     ͮ     */		'\u036f', /*     ͯ     */		'\u033e', /*     ̾     */		'\u035b', /*     ͛     */
				'\u0346', /*     ͆     */		'\u031a' /*     ̚     */
			];

			//those go DOWN
			var zalgo_down = [
				'\u0316', /*     ̖     */		'\u0317', /*     ̗     */		'\u0318', /*     ̘     */		'\u0319', /*     ̙     */
				'\u031c', /*     ̜     */		'\u031d', /*     ̝     */		'\u031e', /*     ̞     */		'\u031f', /*     ̟     */
				'\u0320', /*     ̠     */		'\u0324', /*     ̤     */		'\u0325', /*     ̥     */		'\u0326', /*     ̦     */
				'\u0329', /*     ̩     */		'\u032a', /*     ̪     */		'\u032b', /*     ̫     */		'\u032c', /*     ̬     */
				'\u032d', /*     ̭     */		'\u032e', /*     ̮     */		'\u032f', /*     ̯     */		'\u0330', /*     ̰     */
				'\u0331', /*     ̱     */		'\u0332', /*     ̲     */		'\u0333', /*     ̳     */		'\u0339', /*     ̹     */
				'\u033a', /*     ̺     */		'\u033b', /*     ̻     */		'\u033c', /*     ̼     */		'\u0345', /*     ͅ     */
				'\u0347', /*     ͇     */		'\u0348', /*     ͈     */		'\u0349', /*     ͉     */		'\u034d', /*     ͍     */
				'\u034e', /*     ͎     */		'\u0353', /*     ͓     */		'\u0354', /*     ͔     */		'\u0355', /*     ͕     */
				'\u0356', /*     ͖     */		'\u0359', /*     ͙     */		'\u035a', /*     ͚     */		'\u0323' /*     ̣     */
			];
			
			//those always stay in the middle
			var zalgo_mid = [
				'\u0315', /*     ̕     */		'\u031b', /*     ̛     */		'\u0340', /*     ̀     */		'\u0341', /*     ́     */
				'\u0358', /*     ͘     */		'\u0321', /*     ̡     */		'\u0322', /*     ̢     */		'\u0327', /*     ̧     */
				'\u0328', /*     ̨     */		'\u0334', /*     ̴     */		'\u0335', /*     ̵     */		'\u0336', /*     ̶     */
				'\u034f', /*     ͏     */		'\u035c', /*     ͜     */		'\u035d', /*     ͝     */		'\u035e', /*     ͞     */
				'\u035f', /*     ͟     */		'\u0360', /*     ͠     */		'\u0362', /*     ͢     */		'\u0338', /*     ̸     */
				'\u0337', /*     ̷     */		'\u0361', /*     ͡     */		'\u0489' /*     ҉_     */		
			];
			
			// rand funcs
			//---------------------------------------------------
			
			//gets an int between 0 and max
			function rand(max)
			{
				return Math.floor(Math.random() * max);
			}

			//gets a random char from a zalgo char table
			function rand_zalgo(array)
			{
				var ind = Math.floor(Math.random() * array.length);
				return array[ind];
			}
			
			// utils funcs
			//---------------------------------------------------
			
			//hide show element
			function toggle(id)
			{
				if(document.getElementById(id).style.display == "none")
					document.getElementById(id).style.display = "block";
				else
					document.getElementById(id).style.display = "none";
			}
			
			//lookup char to know if its a zalgo char or not
			function is_zalgo_char(c)
			{
				var i;
				for(i=0; i<zalgo_up.length; i++)
					if(c == zalgo_up[i])
						return true;
				for(i=0; i<zalgo_down.length; i++)
					if(c == zalgo_down[i])
						return true;
				for(i=0; i<zalgo_mid.length; i++)
					if(c == zalgo_mid[i])
						return true;
				return false;
			}
			
			function draw_zalgo_table(elid)
			{
				var container = document.getElementById(elid);
				var html = '';

				html += '<b>Chars going up:</b><br />\n';
				html += '<table class="zalgo_ref_table">\n';
				html += '<tr>\n';
				for(var i=0; i<zalgo_up.length; i++)
				{
					if(!(i % 10))
						html += '</tr><tr>';
					html += '<td class="zalgo_td">' + zalgo_up[i] + '</td>\n';
				}
				html += '</tr>\n';
				html += '</table>\n';
				
				html += '<br /><b>Chars staying in the middle:</b><br />\n';
				html += '<table class="zalgo_ref_table">\n';
				html += '<tr>\n';
				for(var i=0; i<zalgo_mid.length; i++)
				{
					if(!(i % 10))
						html += '</tr><tr>';
					html += '<td class="zalgo_td">' + zalgo_mid[i] + '</td>\n';
				}
				html += '</tr>\n';
				html += '</table>\n';
				
				html += '<br /><b>Chars going down:</b><br />\n';
				html += '<table class="zalgo_ref_table">\n';
				html += '<tr>\n';
				for(var i=0; i<zalgo_down.length; i++)
				{
					if(!(i % 10))
						html += '</tr><tr>';
					html += '<td class="zalgo_td">' + zalgo_down[i] + '</td>\n';
				}
				html += '</tr>\n';
				html += '</table>\n';
				
				container.innerHTML = html;
			}
			
			// main shit
			//---------------------------------------------------
			function zalgo_textarea(id)
			{
				var progressive = document.getElementById('zalgo_opt_prog').checked
				var sine = document.getElementById('zalgo_opt_sine').checked
			
				var p = document.getElementById(id);
				
				var txt = p.value;
				var newtxt = '';
					
				var intensity = document.getElementById('zalgo_opt_intensity').value;
				var sinus_elem = document.getElementById('zalgo_opt_sinus');
				var frequency = (sinus_elem.value) / 128.0;
					
				var len = txt.length;
				var iteration = 0;
					
				for(var c of txt)
				{
					//if(is_zalgo_char(txt.substr(i, 1)))
					//	continue;
					
					var multiplier = 1.0;
					var progress = iteration / len;
					iteration += 1;
					
					if (progressive) {
						multiplier = progress;
						multiplier *= multiplier;
					}
					
					if (sine) {
						var progression = (iteration / frequency);
						var sinus = Math.sin(progression);
						multiplier *= sinus;
					}
					
					var num_up;
					var num_mid;
					var num_down;
					
					//add the normal character
					newtxt += c;
					
					if (intensity <= 12) {
						num_up = rand(intensity);
						num_mid = rand(intensity / 4);
						num_down = rand(intensity);
					}
					else {
						num_up = rand(intensity) / 4 + 3;
						num_mid = rand(intensity / 4) / 4 + 1;
						num_down = rand(intensity) / 4 + 3;
					}

					//options
					/*
					switch(fuck_up) {
						case 0:
							num_up = rand(8);
							num_mid = rand(2);
							num_down = rand(8);
							break;
						case 1:
							num_up = rand(16) / 2 + 1;
							num_mid = rand(6) / 2;
							num_down = rand(16) / 2 + 1;
							break;
						case 2:
							num_up = rand(64) / 4 + 3;
							num_mid = rand(16) / 4 + 1;
							num_down = rand(64) / 4 + 3;
							break;
					}
					*/
					
					num_up = Math.round(num_up * Math.abs(multiplier));
					num_mid = Math.round(num_mid * Math.abs(multiplier));
					num_down = Math.round(num_down * Math.abs(multiplier));
					
					if (sine) {
						if (multiplier > 0) {
							num_down = 0;
						}
						else if (multiplier < 0) {
							num_up = 0;
						}
					}
					
					if(document.getElementById('zalgo_opt_up').checked)
						for(var j=0; j<num_up; j++)
							newtxt += rand_zalgo(zalgo_up);
					if(document.getElementById('zalgo_opt_mid').checked)
						for(var j=0; j<num_mid; j++)
							newtxt += rand_zalgo(zalgo_mid);
					if(document.getElementById('zalgo_opt_down').checked)
						for(var j=0; j<num_down; j++)
							newtxt += rand_zalgo(zalgo_down);
				}

				//result is in nextxt, display that
				
				//remove all children of lulz_container
				var container = document.getElementById('lulz_container');
				while (container.firstChild) {
						container.firstChild.remove();
				}

				//build blocks for each line & create a <br />
				var lines = newtxt.normalize().split("\n");
				for (line of lines)
				{
					var n = document.createTextNode(line);
					container.appendChild(n);
					var nl = document.createElement('BR');
					container.appendChild(nl);
				}

				//done
			}
		/* ]]> */
		</script>
	</head>
	
	<body>
		<table id="zalgotable">
			<tr>
				<td id="lulz_container" style="BORDER-RIGHT: black 2px solid; PADDING-RIGHT: 50px; BORDER-TOP: black 2px solid; PADDING-LEFT: 50px; PADDING-BOTTOM: 50px; BORDER-LEFT: black 2px solid; PADDING-TOP: 50px; BORDER-BOTTOM: black 2px solid" width=550>
					<p id="lulz"></p>
				</td>
				
				<td style="BORDER-RIGHT: black 2px solid; BORDER-TOP: black 2px solid; BORDER-LEFT: black 2px solid; BORDER-BOTTOM: black 2px solid" width=450>
					<textarea id="zalgo_txt" style="FONT-FAMILY: Times New Roman" rows="13" cols="80"></textarea>
					<form id="zalgo_form" action="">
						<input id="zalgo_btn" onclick="zalgo_textarea('zalgo_txt');" type="button" value="HE COMES"> </input>
						<input id="zalgo_ref" style="FLOAT: right" onclick="toggle('reference');" type="button" value="Toggle reference sheet"> </input>
						<br />
						<table>
							<tr>
								<td>
									<input id="zalgo_opt_up" onchange="zalgo_textarea('zalgo_txt');" type="checkbox" CHECKED>fuck up going up</input><br />
									<input id="zalgo_opt_mid" onchange="zalgo_textarea('zalgo_txt');" type="checkbox" CHECKED>fuck up the middle</input><br />
									<input id="zalgo_opt_down" onchange="zalgo_textarea('zalgo_txt');" type="checkbox" CHECKED>fuck up going down</input><br />
									<input id="zalgo_opt_prog" onchange="zalgo_textarea('zalgo_txt');" type="checkbox" CHECKED>progressive</input><br />
									<input id="zalgo_opt_sine" onchange="zalgo_textarea('zalgo_txt');" type="checkbox" CHECKED>sine</input><br />
								</td>
								
								<td>
									<input type="range" min="1" max="100" value="64" class="slider" id="zalgo_opt_intensity" oninput="zalgo_textarea('zalgo_txt');">intensity</input><br />
									<input style="direction: rtl;" type="range" min="1" max="10000" value="7500" class="slider" id="zalgo_opt_sinus" oninput="zalgo_textarea('zalgo_txt');">frequency</input><br />
								</td>
							</tr>
						</table>
					</form>
					<script type="text/javascript">
						zalgo_textarea('zalgo_txt');
					</script>
			
				</TD>
			</tr>
		</TABLE>
		
		<div id=reference style="DISPLAY: none">
			<br />
			<h2>Zalgo Characters Reference&gt;</h2>
			<p id=zalgo_ref_tablex>
				<script type="text/javascript">
					draw_zalgo_table('zalgo_ref_tablex');
				</script>
			</p>
		</div>
	</body>
</html>
